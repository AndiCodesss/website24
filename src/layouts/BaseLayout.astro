---
import '../styles/global.css';
import MagneticNav from '../components/MagneticNav.astro';
import CommandPalette from '../components/CommandPalette.astro';
import PortalTransition from '../components/PortalTransition.astro';
import LoadingAnimation from '../components/LoadingAnimation.astro';
import CursorTrail from '../components/CursorTrail.astro';

const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="icon" type="image/png" href="/favicon.png">
    <meta name="description" content="Andreas Oberdörfer - People Person & Quantitative Thinker with interests in finance, informatics and culture">
    <title>{title || 'Andreas Oberdörfer'}</title>
</head>
<body>
    <LoadingAnimation />
    <CursorTrail />
    <MagneticNav />
    <CommandPalette />
    <PortalTransition />
    <main>
        <slot /> <!-- Page content will go here -->
    </main>
    <footer>
        <div class="footer-content">
            <div class="social-links">
                <a href="https://www.linkedin.com/in/andreas-oberdoerfer/" target="_blank" aria-label="LinkedIn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                    </svg>
                </a>
            </div>
            <p>&copy; {new Date().getFullYear()} Andreas Oberdörfer. All rights reserved.</p>
            <p class="hint">(Hint: Try ↑ ↑ ↓ ↓ ← → ← → B A for a surprise!)</p>
        </div>
    </footer>

    <!-- Theme Toggle Button -->
    <button class="theme-toggle" id="themeToggle" aria-label="Toggle dark mode">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="theme-icon-light" viewBox="0 0 16 16">
            <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
        </svg>
    </button>

    <!-- Konami Code Image -->
    <img src="/konami-pic.jpg" alt="Konami Code Surprise!" class="konami-image" id="konamiImage" />

    <!-- Konami Code Audio -->
    <audio src="/konami-sound.mp3" id="konamiAudio" preload="auto"></audio>

    <!-- Load GSAP -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollTrigger.min.js"></script>
    
    <script>
        // Register GSAP plugins
        gsap.registerPlugin(ScrollTrigger);
        
        // Dark mode toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
        
        // Check for saved theme preference or use browser preference
        const currentTheme = localStorage.getItem('theme') || 
                             (prefersDarkScheme.matches ? 'dark' : 'light');
                             
        // Apply theme on load
        if (currentTheme === 'dark') {
            document.body.classList.add('dark-mode');
        }
        
        // Toggle theme when button is clicked
        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark-mode');
            
            // Save preference
            const theme = document.body.classList.contains('dark-mode') ? 'dark' : 'light';
            localStorage.setItem('theme', theme);
        });

        // Scroll reveal functionality
        document.addEventListener('DOMContentLoaded', () => {
            const scrollElements = document.querySelectorAll('.reveal-on-scroll, .reveal-item');
            
            const elementInView = (el, scrollOffset = 100) => {
                const elementTop = el.getBoundingClientRect().top;
                return (
                    elementTop <= (window.innerHeight || document.documentElement.clientHeight) - scrollOffset
                );
            };
            
            const displayScrollElement = (element) => {
                element.classList.add('revealed');
            };
            
            const hideScrollElement = (element) => {
                element.classList.remove('revealed');
            };
            
            const handleScrollAnimation = () => {
                scrollElements.forEach((el) => {
                    if (elementInView(el, 100)) {
                        displayScrollElement(el);
                    } else {
                        hideScrollElement(el);
                    }
                });
            };
            
            // Initial check on page load
            handleScrollAnimation();
            
            // Listen for scroll events
            window.addEventListener('scroll', () => {
                handleScrollAnimation();
            });
        });

        // Konami Code
        const konamiCode = [
            'ArrowUp', 'ArrowUp',
            'ArrowDown', 'ArrowDown',
            'ArrowLeft', 'ArrowRight',
            'ArrowLeft', 'ArrowRight',
            'b', 'a'
        ];
        let index = 0;

        document.addEventListener('keydown', (event) => {
            const requiredKey = konamiCode[index];
            // Use event.key.toLowerCase() for letter keys to make it case-insensitive
            const pressedKey = (event.key.length === 1) ? event.key.toLowerCase() : event.key;

            if (pressedKey === requiredKey) {
                index++;
                if (index === konamiCode.length) {
                    // Code entered correctly!
                    activateKonami();
                    index = 0; // Reset index
                }
            } else {
                // Wrong key, reset index
                index = 0;
                 // Optional: Reset if the first key pressed is wrong but matches the first konami key again
                 if (pressedKey === konamiCode[0]) {
                    index = 1;
                 }
            }
        });

        function activateKonami() {
            console.log("Konami Activated! Niceeee!");
            document.body.classList.add('konami-effect');

            const img = document.getElementById('konamiImage');
            if (img) {
                img.classList.add('show');
            }

            const audio = document.getElementById('konamiAudio');
            if (audio) {
                audio.currentTime = 29; // Start at 29 seconds
                audio.play();
            }

            // Hide after a few seconds
            setTimeout(() => {
                document.body.classList.remove('konami-effect');
                if (img) {
                    img.classList.remove('show');
                }
                if (audio) {
                    audio.pause(); // Stop the audio
                    audio.currentTime = 0; // Rewind
                }
            }, 10000); // Duration matches visual effect
        }
    </script>
</body>
</html> 